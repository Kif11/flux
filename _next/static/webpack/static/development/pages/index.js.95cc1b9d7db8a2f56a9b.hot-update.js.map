{"version":3,"file":"static/webpack/static/development/pages/index.js.95cc1b9d7db8a2f56a9b.hot-update.js","sources":["webpack:///./src/components/Logo/index.js"],"sourcesContent":["import * as THREE from 'three';\nimport { useEffect, useRef } from 'react';\nimport GlitchShader from \"./GlitchShader\"\n// THREE.OBJLoader expects THREE to be a global object\nif (typeof window !== 'undefined') {\n  window.THREE = THREE;\n} else {\n  global.THREE = THREE;\n}\nrequire('three/examples/js/loaders/OBJLoader');\n\nconst Logo = () => {\n  const mountRef = useRef(null);\n  const controls = useRef(null);\n\n  const scale = 0.8;\n  const h = 300 * scale;\n  const w = 600 * scale;\n\n  useEffect(() => {\n    let width = mountRef.current.clientWidth;\n    let height = mountRef.current.clientHeight;\n    let frameId;\n    let startTime = Date.now();\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.OrthographicCamera( -6 / 4, 6 / 4, 3 / 4, -3 / 4, .01, 1000 );\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    let logoMesh;\n\n    var loader = new window.THREE.OBJLoader();\n\n    loader.load((\"logo_01.obj\"), (obj) => {\n      logoMesh = obj.children[0];\n      const mUniforms = {\n        time: { value: 0 },\n      };\n      const material = new THREE.ShaderMaterial(\n        {\n          uniforms : mUniforms,\n          vertexShader :  GlitchShader.vertex,\n          fragmentShader :  GlitchShader.fragment,\n          side : THREE.DoubleSide\n        }\n      );\n      logoMesh.material = material;\n      scene.add(logoMesh);\n    })\n\n    camera.position.z = 4;\n    renderer.setClearColor('#FFFFFF');\n    renderer.setSize(w, h);\n    renderer.setPixelRatio(2)\n\n    const renderScene = () => {\n      renderer.render(scene, camera);\n    };\n\n    const handleResize = () => {\n      // width = mountRef.current.clientWidth;\n      // height = mountRef.current.clientHeight;\n      // renderer.setSize(width, height);\n      // camera.aspect = width / height;\n      // camera.updateProjectionMatrix();\n      renderScene();\n    };\n\n    const animate = () => {\n      if(logoMesh) {\n        logoMesh.material.uniforms.time.value = (Date.now() - startTime) / 1000;\n      }\n      renderScene();\n      frameId = window.requestAnimationFrame(animate);\n    };\n\n    const start = () => {\n      if (!frameId) {\n        frameId = requestAnimationFrame(animate);\n      }\n    };\n\n    const stop = () => {\n      cancelAnimationFrame(frameId);\n      frameId = null;\n    };\n\n    mountRef.current.appendChild(renderer.domElement);\n    window.addEventListener('resize', handleResize);\n    start();\n\n    controls.current = { start, stop };\n\n    return () => {\n      stop();\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n\n      scene.remove(cube);\n      geometry.dispose();\n      material.dispose();\n    };\n  }, []);\n\n  return (\n    <div style={{ height: h, width: w}} ref={mountRef} />\n  )\n}\n\nexport default Logo;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;A","sourceRoot":""}