{"version":3,"file":"static/webpack/static/development/pages/index.js.f189897c1c586c212469.hot-update.js","sources":["webpack:///./src/components/JoinForm/index.tsx"],"sourcesContent":["import { useState, FC } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport * as yup from 'yup';\nimport InputField from '../../components/InputField';\nimport Button from '../../components/Button';\nimport s from './index.module.css'\n\ninterface APIErrorResponse {\n  error: string;\n}\n\ntype InputProps = {\n  value: string;\n  name: string;\n  validationMessage: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\ntype Question = {\n  key: string;\n  value: string;\n};\n\nexport const useInput = (\n  name: string,\n  validation: (value: string) => yup.StringSchema<string>,\n  defaultValue: string,\n): InputProps => {\n  const [value, setValue] = useState(defaultValue || '');\n  const [error, setError] = useState('');\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value: val } = event.target;\n\n    const schema = validation(value);\n\n    schema\n      .validate(val)\n      .then(() => setError(''))\n      .catch(err => setError(err.message));\n\n    setValue(val);\n  };\n\n  return {\n    value,\n    name,\n    validationMessage: error,\n    onChange: handleInputChange,\n  };\n};\n\nexport const areInputsValid = (inputs: InputProps[]): boolean => {\n  let valid = true;\n\n  for (let i = 0; i < inputs.length; i += 1) {\n    const input = inputs[i];\n\n    const isValue = !!input.value;\n    const isError = !!input.validationMessage;\n\n    if (isError || !isValue) {\n      valid = false;\n    }\n  }\n\n  return valid;\n};\n\nconst join = (\n  email: string,\n  questions: Question[],\n  onSuccess: (res: AxiosResponse) => void,\n  onFailure: (data: APIErrorResponse) => void,\n): void => {\n  axios\n    .post('http://localhost:9000/v1/subscribe', { email, questions })\n    .then(res => {\n      onSuccess(res);\n    })\n    .catch(err => {\n      const { data }: { data: APIErrorResponse } = err.response;\n      onFailure(data);\n    });\n};\n\ntype JoinFormProps = {\n  containerClass: string;\n}\n\nconst JoinForm: FC<JoinFormProps> = ({ containerClass }) => {\n  const emailProps = useInput(\n    'email',\n    () =>\n      yup\n        .string()\n        .email()\n        .required(),\n    '',\n  );\n  const whyProps = useInput('why', () => yup.string().required(), '');\n  const projectProps = useInput('project', () => yup.string().required(), '');\n  const socialProps = useInput('social', () => yup.string().required(), '');\n  const [requestError, setRequestError] = useState('');\n\n  const allInputsValid = areInputsValid([\n    emailProps,\n    whyProps,\n    projectProps,\n    socialProps,\n  ]);\n\n  console.log(allInputsValid);\n\n  const handleSuccess = (): void => console.log('[D] Request success!');\n  const handleFailure = (data: APIErrorResponse): void =>\n    setRequestError(data.error);\n\n  return (\n    <div className={containerClass}>\n      <InputField {...emailProps} type=\"email\" className={s.input} />\n      <InputField\n        {...whyProps}\n        type=\"text\"\n        placeholder=\"Why do you want to join Flux?\"\n        className={s.input}\n      />\n      <InputField\n        {...projectProps}\n        type=\"text\"\n        placeholder=\"Do you have any project that you want to work on during Flux event?\"\n        className={s.input}\n      />\n      <InputField\n        {...socialProps}\n        type=\"text\"\n        placeholder=\"Link to Instagram, Facebook or personal site\"\n        className={s.input}\n      />\n      <Button\n        text=\"Submit\"\n        buttonClassName={s.submitButton}\n        disabled={!allInputsValid}\n        onClick={(): void =>\n          join(emailProps.value, [], handleSuccess, handleFailure)\n        }\n      />\n      <div>{requestError}</div>\n    </div>\n  );\n};\n\nexport default JoinForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAkBA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AAGA;AAEA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAAA;AACA;AAEA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AACA;AAcA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}